/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'carlosalexandre' at '14/07/16 16:11' with Gradle 2.14
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.14/userguide/tutorial_java_projects.html
 */


// Apply the java plugin to add support for Java

buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "net.ltgt.gradle:gradle-apt-plugin:0.6"
  }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: "net.ltgt.apt"
sourceCompatibility = 1.6
targetCompatibility = 1.6
version = '0.0.1-SNAPSHOT'


test {
    if (System.getProperty('DEBUG', 'false') == 'true') {
		jvmArgs '-Xdebug',
            '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5006'
    }
}


// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    testCompile 'junit:junit:4.12'
    testCompile "org.mockito:mockito-core:1.10.19"
    testCompile 'org.powermock:powermock-module-junit4:1.6.5'
    testCompile 'org.powermock:powermock-api-mockito:1.6.5'
    //For auto-generation classes, wiht the annotations, 
    //the generated files source code is in  build/generated/source/apt
    compileOnly files('src/main/resources/jmoodle-annotations-0.0.1-SNAPSHOT.jar')
    apt files('src/main/resources/jmoodle-annotations-0.0.1-SNAPSHOT.jar')
}

task compileAnnotations (dependsOn: 'clean', type: JavaCompile) {
    source = sourceSets.main.java.srcDirs
    include 'ml/jmoodle/annotations/**'
    classpath = sourceSets.main.compileClasspath
    destinationDir = sourceSets.main.output.classesDir
}
compileAnnotations.options.compilerArgs = ["-sourcepath", "$projectDir/src/main/java", "-source", "1.6"]

task jarAnnotations(dependsOn: 'compileAnnotations', type: Jar) {
	baseName = 'jmoodle'
	appendix = 'annotations'
	from fileTree(dir: sourceSets.main.output.classesDir).matching { include 'ml/jmoodle/annotations/**' }
	from fileTree(dir: 'src/main/resources').matching { include 'META-INF/services/*' }
	doLast{
        copy {
            from "${project.buildDir}/libs"
            into 'src/main/resources'
            include 'jmoodle-annotations*.jar'
        }
    }
}

